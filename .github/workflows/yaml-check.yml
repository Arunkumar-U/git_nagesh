name: Syntax Check

on: [ pull_request ]
  
jobs:
  syntax-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Ensuring the file is checkout to the runner
        run: |
          path='/home/runner/work/git_nagesh/git_nagesh/vars'
          echo "${path}"
          cd ${path}/test; chmod 755 main.yml; ls -lrt
          cd ${path}/acc; chmod 755 main.yml; ls -lrt
          cd ${path}/prd; chmod 755 main.yml; ls -lrt
          cd ${path}; chmod 755 yaml_precheck.sh; ls -lrt
          cd ${path}
          #./yaml_precheck.sh ${path}/test/main.yml ${path}/acc/main.yml ${path}/prd/main.yml

      - name: Check changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            yaml:
              - 'vars/acc/main.yml'
              - 'vars/test/main.yml'
              - 'vars/prd/main.yml'


      - name: Run Yaml Pre-check
        run: |
          git fetch origin main
          path='/home/runner/work/ah-tech-ctrlm-jac-workflow/ah-tech-ctrlm-jac-workflow'

          echo "Changed files:"
          changed_files=$(git diff --name-only main...HEAD -- 'vars/acc/main.yml' 'vars/test/main.yml' 'vars/prd/main.yml')
          echo "$changed_files"
         
        shell: bash -l {0} -v

      



      # - name: Run Yaml Pre-check
      #   #if: steps.filter.outputs.yaml == 'true'
      #   run: |
      #     git fetch origin main
      #     errors=0
      #     path='/home/runner/work/ah-tech-ctrlm-jac-workflow/ah-tech-ctrlm-jac-workflow'

      #     echo "Changed files:"
      #     git diff --name-only origin/main...HEAD -- 'vars/**/main.yml'


      #     # for file in $(git diff --name-only origin/main...HEAD -- 'vars/**/main.yml'); do
      #     #   echo "Processing the $file"
      #     #   ${path}/vars/yaml_prech.sh "$file"
      #     #   if [ $? -ne 0 ]; then
      #     #     ((errors++))
      #     #   fi
      #     # done
      #     # if ((errors)); then
      #     #   echo "Please verify and correct the folder name"
      #     #   echo "usage: It should be capital"
      #     #   echo ""
      #     #   echo "The folder name shoudl ends with .json"
      #     #   exit 1
      #     # else 
      #     #   echo "All looks good"
      #     # fi
      #     shell: bash -l


      # - name: Installing node.js and npm
      #   run: |
      #     sudo apt-get update
      #     curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
      #     sudo apt-get install -y nodejs

      # - name: Ensuring node.js and npm was installed
      #   run: |
      #     node --version
      #     npm --version

      # - name: Installing jsonlint and ensuring the version
      #   run: |
      #     sudo npm install -g jsonlint
      #     jsonlint --version || true


      # - name: Validating the json file 
      #   run: |
      #     path='/home/runner/work/git_nagesh/git_nagesh/vars'
      #     cd ${path}; chmod 755 json_precheck.sh
      #     ./json_precheck.sh


   

      # - name: Set up Node.js environment
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 'lts/*'

      # - name: Install jsonlint globally
      #   run: |
      #     npm install -g jsonlint

      # - name: Verify jsonlint installation
      #   run: |
      #     jsonlint --version || true

      # - name: Validating the json file
      #   run: |
      #     jsonlint vars/invalid.json
          


      
























        #./yaml_precheck.sh
        # chmod 755 /home/runner/work/git_nagesh/git_nagesh/vars/yaml_precheck.sh
        # chmod 755 /home/runner/work/git_nagesh/git_nagesh/vars/test/main.yml
        # ls -lrt
        # /home/runner/work/git_nagesh/git_nagesh/vars/yaml_precheck.sh




        #     - name: Install yamllint and jsonlint
        #       run: |
        #         pip install yamllint
                

        #     - name: Run yamllint
        #       run: |
        #         yamllint test.yml




        


    
        


