---
name: Json Syntax Check
on:
  pull_request:

jobs:
  json-syntax-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkoutcode
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check changed file
        uses: dorny/paths-filter@v3
        with:
          filters: |
            json: "**/*/json"

      - name: Validate Json Syntax
        run: |
          git fetch origin main
          errors=0
          for file in $(git diff --name-only origin/main...HEAD -- '*.json') ; do
            if ! jq . "$file" >/dev/null 2>&1; then
              echo "Error in $file"
              jq empty "$file"
              ((errors++))
            fi
          done
          if ((errors)); then
            echo "$errors files had errors"
            exit 1
          fi
        shell: bash -l {0} -v

      - name: Check for DocumentationFile Key
        run: |
          git fetch origin main
          errors=0
          for file in $(git diff --name-only origin/main...HEAD -- '*.json') ; do
            # Parse the JSON and get all job names within the folder
            folder=$(jq -r 'keys_unsorted[]' "$file")
            jobs=$(jq -r --arg folder "$folder" '.[$folder] | to_entries | .[] | select(.value.Type == "Job:Command") | .key' "$file")
            for job in $jobs; do
              # Check if the job contains DocumentationFile
              if ! jq -e --arg folder "$folder" --arg job "$job" '.[$folder][$job].DocumentationFile' "$file" >/dev/null; then
                echo "Error: Job \"$job\" in folder \"$folder\" of $file does not contain DocumentationFile"
                ((errors++))
              fi
            done
          done
          if ((errors)); then
            echo "$errors jobs are missing DocumentationFile"
            exit 1
          fi
        shell: bash -l {0} -v